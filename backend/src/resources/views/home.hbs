<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hiển thị Dữ liệu Metabase</title>
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
    }
    table, th, td {
      border: 1px solid black;
    }
    th, td {
      padding: 8px;
      text-align: left;
    }
  </style>
  <!-- Bootstrap CSS cho Modal -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
  <h2>Metabase Data</h2>
  <table id="data-table">
    <thead>
    
    </thead>
    <tbody>
      <tr>
        <td colspan="2">
          <iframe 
            src="http://localhost:3000/public/question/88989b7b-570b-4d6f-8669-32186d60a4bb" 
            frameborder="0" 
            width="100%" 
            height="400">
          </iframe>
        </td>
      </tr>
    </tbody>
  </table>

  <!-- Modal để hiển thị chi tiết -->
  <div class="modal" id="detailModal" tabindex="-1" role="dialog" aria-labelledby="detailModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="detailModalLabel">Thông tin chi tiết</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body" id="modal-body">
          <!-- Nội dung chi tiết sẽ được thêm vào đây -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Dữ liệu Courses -->
  <div class="mt-4">
    <div class="row">
      {{#each courses}}
        <div class="col-sm-6 col-lg-4 mb-4">
          <div class="card">
            <div class="card-body">
              <!-- Hiển thị ID của KR -->
              <a href="/krid/{{this.id}}">
                <h5 class="card-title">{{this.id}}</h5>
                <p class="card-text">{{this.description}}</p>
              </a>

              <!-- Hiển thị trạng thái và tiến độ của KR -->
              <p class="card-text">Status: {{this.status}}</p>
              <p class="card-text">Progress: {{this.progress}}%</p>

              <!-- Link "Go somewhere" để hiển thị chi tiết -->
              <a href="#" class="btn btn-primary" onclick="showDetailInfo('{{this._id}}')">Go Detail</a>

              <!-- Nút gửi email -->
              <a href="#" class="btn btn-success" onclick="sendCompletionEmail('{{this._id}}')">Gửi email</a>
            </div>
          </div>
        </div>
      {{/each}}
    </div>
  </div>

  <!-- Script cho Modal và fetch dữ liệu chi tiết -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <script>
    // Hàm gửi email khi hoàn thành công việc
    function sendCompletionEmail(krId) {
        if (!confirm('Bạn có chắc chắn muốn gửi email thông báo hoàn thành công việc này không?')) {
            return;
        }

        fetch(`/api/send-email/${krId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                alert('Đã gửi email thành công!');
            } else if (data.error) {
                alert('Gửi email thất bại: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Lỗi khi gửi email:', error);
            alert('Gửi email thất bại. Vui lòng thử lại.');
        });
    }

    // Hàm hiển thị thông tin chi tiết trong Modal
    function showDetailInfo(krId) {
        fetch(`/api/get-kr-detail/${krId}`)
            .then(response => response.json())
            .then(data => {
                if (data) {
                    const modalBody = document.getElementById('modal-body');
                    modalBody.innerHTML = `
                        <p><strong>ID:</strong> ${data.id}</p>
                        <p><strong>Description:</strong> ${data.description}</p>
                        <p><strong>Meta ID:</strong> ${data.MetaId}</p>
                        <p><strong>Picture:</strong> ${data.pic.join(', ')}</p>
                        <p><strong>Role:</strong> ${data.role}</p>
                        <p><strong>Proposer:</strong> ${data.proposer}</p>
                        <p><strong>Starting Value:</strong> ${data.startingValue}</p>
                        <p><strong>Target Value:</strong> ${data.targetValue}</p>
                        <p><strong>Current Value:</strong> ${data.currentValue}</p>
                        <p><strong>OKR State:</strong> ${data.okrState}</p>
                        <p><strong>Mandays:</strong> ${data.mandays}</p>
                        <p><strong>Progress:</strong> ${data.progress}%</p>
                        <p><strong>10th Month Real-time:</strong> ${data.thang10Realtime}%</p>
                        <p><strong>10th Month Actual:</strong> ${data.thang10Thucte}%</p>
                        <p><strong>Acceptance Criteria:</strong> ${data.acceptanceCriteria}</p>
                        <p><strong>Result:</strong> ${data.result}</p>
                        <p><strong>Proof:</strong> ${data.proof}</p>
                        <p><strong>Signoff Person (Email):</strong> ${data.signoffPerson}</p>
                        <p><strong>Signoff Status:</strong> ${data.signoff}</p>
                        <p><strong>Signoff Comment:</strong> ${data.signoffComment}</p>
                        <p><strong>Approval Status:</strong> ${data.approvalStatus === 'TRUE' ? 'Approved' : 'Not Approved'}</p>
                        <p><strong>Item Type:</strong> ${data.itemType}</p>
                        <p><strong>KR Type 1:</strong> ${data.krType1}</p>
                        <p><strong>KR Type 2:</strong> ${data.krType2}</p>
                        <p><strong>KR Type 3:</strong> ${data.krType3}</p>
                        <p><strong>Weight:</strong> ${data.weight !== null ? data.weight : 'Not Assigned'}</p>

                        <p><strong>Start Date:</strong> ${new Date(data.startDate).toLocaleDateString()}</p>
                        <p><strong>Due Date:</strong> ${new Date(data.dueDate).toLocaleDateString()}</p>
                        <p><strong>Done Date:</strong> ${data.doneDate ? new Date(data.doneDate).toLocaleDateString() : 'Not Done'}</p>

                    `;
                    $('#detailModal').modal('show');
                } else {
                    alert('Không tìm thấy thông tin chi tiết.');
                }
            })
            .catch(error => {
                console.error('Lỗi khi lấy dữ liệu chi tiết:', error);
                alert('Lỗi khi lấy dữ liệu. Vui lòng thử lại.');
            });
    }

    // Fetch dữ liệu từ Metabase (có thể không sử dụng trong trường hợp này)
    fetch('https://your-metabase-url.com/api/card/{card-id}/query/json', {
        method: 'GET',
        headers: {
            'Authorization': 'Bearer your-session-token'
        }
    })
    .then(response => response.json())
    .then(data => {
        const tableBody = document.getElementById('data-table').getElementsByTagName('tbody')[0];
        data.forEach(row => {
            const tr = document.createElement('tr');
            const td1 = document.createElement('td');
            const td2 = document.createElement('td');
            td1.innerText = row['column1'];
            td2.innerText = row['column2'];
            tr.appendChild(td1);
            tr.appendChild(td2);
            tableBody.appendChild(tr);
        });
    })
    .catch(error => console.error('Error fetching Metabase data:', error));
  </script>
</body>
</html>
