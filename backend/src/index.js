import express from "express"
import dotenv from "dotenv"
import mongoose from "mongoose"
import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';

import sheetService from './services/sheetService.js';
import mongodbService from './services/mongodbService.js'

dotenv.config()
const app = express()
app.use(express.json())
const PORT = process.env.PORT || 3001
const MONGOURL = process.env.MONGO_URL

app.get('/',(req,res) =>{
    res.send('hello world')
})
app.post("/", (req, res) => {
  console.log(req.body.message); // Should log: "update data"
  res.sendStatus(200);
});

//connect  ggsheet
const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
  key: process.env.GOOGLE_PRIVATE_KEY,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});
//1VYW8_6TAcgJDNB9428ucVtIUn-now0r-5Gnr816wDRo //okr
//10eGgVDsvfd_T0zRCZRwOPlXC2bLZ_scHQex1-IMuBdg //okr2
const doc = new GoogleSpreadsheet('10eGgVDsvfd_T0zRCZRwOPlXC2bLZ_scHQex1-IMuBdg', serviceAccountAuth);

// console.log("First 5 rows:");
// rows.forEach((row, index) => {
//       console.log(`Row ${index + 1}:`, row._rawData); // _rawData contains an array of cell values
//     });
mongoose.connect(MONGOURL).then(async()=>{
  console.log('db is connected')
  //delete old data then fetch new data
  await mongodbService.clearData();
  await mongodbService.initData(doc)

  setInterval(async () => {
    console.log('Clearing and reinitializing data...');
    await mongodbService.clearData(); // Clear existing data
    console.log('clear data')
    await mongodbService.initData(doc); // Reinitialize data
    console.log('Data cleared and reinitialized');
  }, 60000);
})

app.listen(PORT,()=>{
  console.log('server is running on PORT:'+PORT)
})